name: Build

on: [push]

jobs:
  build:
    runs-on: ${{matrix.platform.os}}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { os: windows-2022, cc: cl.exe,   cxx: cl.exe,      mono: '' }
        - { os: ubuntu-22.04, cc: gcc-11,   cxx: g++-11,      mono: 'mono' }
        - { os: ubuntu-22.04, cc: clang-14, cxx: clang++-14,  mono: 'mono' }
        # - { os: macos-10.15,  cc: clang,    cxx: clang++ }  # Presently doesn't support enough of C++20
        build_type: [Release, Debug]

    env:
      SOURCE_DIR: ${{github.workspace}}
      BUILD_DIR: ${{github.workspace}}/build
      # CMake will choose a compiler using these environment variables.
      CC: ${{matrix.platform.cc}}
      CXX: ${{matrix.platform.cxx}}
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Bootstrap vcpkg (Windows)
      if: ${{ matrix.platform.os == 'windows-2022' }}
      run: ./vcpkg/bootstrap-vcpkg

    - name: Bootstrap vcpkg (Ubuntu)
      if: ${{ matrix.platform.os == 'ubuntu-22.04' }}
      run: ./vcpkg/bootstrap-vcpkg.sh

    # This step assumes `vcpkg` has been bootstrapped (run `./vcpkg/bootstrap-vcpkg`)
    - name: 'Setup NuGet Credentials'
      shell: 'bash'
      run: >
        ${{ matrix.platform.mono }} `vcpkg/vcpkg fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/dholmes215/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "dholmes215"
        -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Create Build Environment
      # We'll use this as our working directory for all subsequent commands.
      run: cmake -E make_directory ${{env.BUILD_DIR}}

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system.
      shell: bash
      working-directory: ${{env.BUILD_DIR}}
      run: cmake -S $SOURCE_DIR -B $BUILD_DIR -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DWARNINGS_AS_ERRORS=ON

    - name: Build
      working-directory: ${{env.BUILD_DIR}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>".
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{env.BUILD_DIR}}
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build_type }}
